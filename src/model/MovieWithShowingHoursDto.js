/*
 * CinemaReservation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {DateTimeInt32ValueTuple} from './DateTimeInt32ValueTuple';

/**
 * The MovieWithShowingHoursDto model module.
 * @module model/MovieWithShowingHoursDto
 * @version 1.0
 */
export class MovieWithShowingHoursDto {
  /**
   * Constructs a new <code>MovieWithShowingHoursDto</code>.
   * @alias module:model/MovieWithShowingHoursDto
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>MovieWithShowingHoursDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MovieWithShowingHoursDto} obj Optional instance to populate.
   * @return {module:model/MovieWithShowingHoursDto} The populated <code>MovieWithShowingHoursDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new MovieWithShowingHoursDto();
      if (data.hasOwnProperty('movieId'))
        obj.movieId = ApiClient.convertToType(data['movieId'], 'Number');
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('yearOfRelease'))
        obj.yearOfRelease = ApiClient.convertToType(data['yearOfRelease'], 'Number');
      if (data.hasOwnProperty('genre'))
        obj.genre = ApiClient.convertToType(data['genre'], 'String');
      if (data.hasOwnProperty('director'))
        obj.director = ApiClient.convertToType(data['director'], 'String');
      if (data.hasOwnProperty('actors'))
        obj.actors = ApiClient.convertToType(data['actors'], 'String');
      if (data.hasOwnProperty('duration'))
        obj.duration = ApiClient.convertToType(data['duration'], 'String');
      if (data.hasOwnProperty('showings'))
        obj.showings = ApiClient.convertToType(data['showings'], [DateTimeInt32ValueTuple]);
    }
    return obj;
  }
}

/**
 * @member {Number} movieId
 */
MovieWithShowingHoursDto.prototype.movieId = undefined;

/**
 * @member {String} title
 */
MovieWithShowingHoursDto.prototype.title = undefined;

/**
 * @member {String} description
 */
MovieWithShowingHoursDto.prototype.description = undefined;

/**
 * @member {Number} yearOfRelease
 */
MovieWithShowingHoursDto.prototype.yearOfRelease = undefined;

/**
 * @member {String} genre
 */
MovieWithShowingHoursDto.prototype.genre = undefined;

/**
 * @member {String} director
 */
MovieWithShowingHoursDto.prototype.director = undefined;

/**
 * @member {String} actors
 */
MovieWithShowingHoursDto.prototype.actors = undefined;

/**
 * @member {String} duration
 */
MovieWithShowingHoursDto.prototype.duration = undefined;

/**
 * @member {Array.<module:model/DateTimeInt32ValueTuple>} showings
 */
MovieWithShowingHoursDto.prototype.showings = undefined;

